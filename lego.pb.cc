// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lego.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "lego.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace lego {
class LegoRecordFieldDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LegoRecordField> {
} _LegoRecordField_default_instance_;
class LegoRecordSectionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LegoRecordSection> {
} _LegoRecordSection_default_instance_;
class LegoRecordDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LegoRecord> {
} _LegoRecord_default_instance_;
class LegoResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LegoResponse> {
} _LegoResponse_default_instance_;

namespace protobuf_lego_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LegoRecordField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LegoRecordField, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LegoRecordField, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LegoRecordField, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LegoRecordSection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LegoRecordSection, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LegoRecordSection, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LegoRecordSection, fields_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LegoRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LegoRecord, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LegoRecord, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LegoRecord, sections_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LegoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LegoResponse, success_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(LegoRecordField)},
  { 8, -1, sizeof(LegoRecordSection)},
  { 16, -1, sizeof(LegoRecord)},
  { 24, -1, sizeof(LegoResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_LegoRecordField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LegoRecordSection_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LegoRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LegoResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "lego.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _LegoRecordField_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _LegoRecordSection_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _LegoRecord_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _LegoResponse_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _LegoRecordField_default_instance_.DefaultConstruct();
  _LegoRecordSection_default_instance_.DefaultConstruct();
  _LegoRecord_default_instance_.DefaultConstruct();
  _LegoResponse_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\nlego.proto\022\004lego\"9\n\017LegoRecordField\022\n\n"
      "\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\014\n\004data\030\003 \001(\t\"T\n"
      "\021LegoRecordSection\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002"
      " \001(\t\022%\n\006fields\030\003 \003(\0132\025.lego.LegoRecordFi"
      "eld\"Q\n\nLegoRecord\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 "
      "\001(\t\022)\n\010sections\030\003 \003(\0132\027.lego.LegoRecordS"
      "ection\"\037\n\014LegoResponse\022\017\n\007success\030\001 \001(\0052"
      ":\n\004Lego\0222\n\nSendRecord\022\020.lego.LegoRecord\032"
      "\022.lego.LegoResponseb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 347);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "lego.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_lego_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LegoRecordField::kIdFieldNumber;
const int LegoRecordField::kNameFieldNumber;
const int LegoRecordField::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LegoRecordField::LegoRecordField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_lego_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lego.LegoRecordField)
}
LegoRecordField::LegoRecordField(const LegoRecordField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  // @@protoc_insertion_point(copy_constructor:lego.LegoRecordField)
}

void LegoRecordField::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LegoRecordField::~LegoRecordField() {
  // @@protoc_insertion_point(destructor:lego.LegoRecordField)
  SharedDtor();
}

void LegoRecordField::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LegoRecordField::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LegoRecordField::descriptor() {
  protobuf_lego_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lego_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LegoRecordField& LegoRecordField::default_instance() {
  protobuf_lego_2eproto::InitDefaults();
  return *internal_default_instance();
}

LegoRecordField* LegoRecordField::New(::google::protobuf::Arena* arena) const {
  LegoRecordField* n = new LegoRecordField;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LegoRecordField::Clear() {
// @@protoc_insertion_point(message_clear_start:lego.LegoRecordField)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LegoRecordField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lego.LegoRecordField)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lego.LegoRecordField.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lego.LegoRecordField.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lego.LegoRecordField.data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lego.LegoRecordField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lego.LegoRecordField)
  return false;
#undef DO_
}

void LegoRecordField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lego.LegoRecordField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lego.LegoRecordField.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lego.LegoRecordField.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string data = 3;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lego.LegoRecordField.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:lego.LegoRecordField)
}

::google::protobuf::uint8* LegoRecordField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lego.LegoRecordField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lego.LegoRecordField.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lego.LegoRecordField.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string data = 3;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lego.LegoRecordField.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:lego.LegoRecordField)
  return target;
}

size_t LegoRecordField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lego.LegoRecordField)
  size_t total_size = 0;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LegoRecordField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lego.LegoRecordField)
  GOOGLE_DCHECK_NE(&from, this);
  const LegoRecordField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LegoRecordField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lego.LegoRecordField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lego.LegoRecordField)
    MergeFrom(*source);
  }
}

void LegoRecordField::MergeFrom(const LegoRecordField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lego.LegoRecordField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void LegoRecordField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lego.LegoRecordField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LegoRecordField::CopyFrom(const LegoRecordField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lego.LegoRecordField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LegoRecordField::IsInitialized() const {
  return true;
}

void LegoRecordField::Swap(LegoRecordField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LegoRecordField::InternalSwap(LegoRecordField* other) {
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  data_.Swap(&other->data_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LegoRecordField::GetMetadata() const {
  protobuf_lego_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lego_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LegoRecordField

// string id = 1;
void LegoRecordField::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LegoRecordField::id() const {
  // @@protoc_insertion_point(field_get:lego.LegoRecordField.id)
  return id_.GetNoArena();
}
void LegoRecordField::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lego.LegoRecordField.id)
}
#if LANG_CXX11
void LegoRecordField::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:lego.LegoRecordField.id)
}
#endif
void LegoRecordField::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lego.LegoRecordField.id)
}
void LegoRecordField::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lego.LegoRecordField.id)
}
::std::string* LegoRecordField::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:lego.LegoRecordField.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LegoRecordField::release_id() {
  // @@protoc_insertion_point(field_release:lego.LegoRecordField.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LegoRecordField::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:lego.LegoRecordField.id)
}

// string name = 2;
void LegoRecordField::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LegoRecordField::name() const {
  // @@protoc_insertion_point(field_get:lego.LegoRecordField.name)
  return name_.GetNoArena();
}
void LegoRecordField::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lego.LegoRecordField.name)
}
#if LANG_CXX11
void LegoRecordField::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:lego.LegoRecordField.name)
}
#endif
void LegoRecordField::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lego.LegoRecordField.name)
}
void LegoRecordField::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lego.LegoRecordField.name)
}
::std::string* LegoRecordField::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:lego.LegoRecordField.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LegoRecordField::release_name() {
  // @@protoc_insertion_point(field_release:lego.LegoRecordField.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LegoRecordField::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:lego.LegoRecordField.name)
}

// string data = 3;
void LegoRecordField::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LegoRecordField::data() const {
  // @@protoc_insertion_point(field_get:lego.LegoRecordField.data)
  return data_.GetNoArena();
}
void LegoRecordField::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lego.LegoRecordField.data)
}
#if LANG_CXX11
void LegoRecordField::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:lego.LegoRecordField.data)
}
#endif
void LegoRecordField::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lego.LegoRecordField.data)
}
void LegoRecordField::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lego.LegoRecordField.data)
}
::std::string* LegoRecordField::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:lego.LegoRecordField.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LegoRecordField::release_data() {
  // @@protoc_insertion_point(field_release:lego.LegoRecordField.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LegoRecordField::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:lego.LegoRecordField.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LegoRecordSection::kIdFieldNumber;
const int LegoRecordSection::kNameFieldNumber;
const int LegoRecordSection::kFieldsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LegoRecordSection::LegoRecordSection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_lego_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lego.LegoRecordSection)
}
LegoRecordSection::LegoRecordSection(const LegoRecordSection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fields_(from.fields_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:lego.LegoRecordSection)
}

void LegoRecordSection::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LegoRecordSection::~LegoRecordSection() {
  // @@protoc_insertion_point(destructor:lego.LegoRecordSection)
  SharedDtor();
}

void LegoRecordSection::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LegoRecordSection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LegoRecordSection::descriptor() {
  protobuf_lego_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lego_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LegoRecordSection& LegoRecordSection::default_instance() {
  protobuf_lego_2eproto::InitDefaults();
  return *internal_default_instance();
}

LegoRecordSection* LegoRecordSection::New(::google::protobuf::Arena* arena) const {
  LegoRecordSection* n = new LegoRecordSection;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LegoRecordSection::Clear() {
// @@protoc_insertion_point(message_clear_start:lego.LegoRecordSection)
  fields_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LegoRecordSection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lego.LegoRecordSection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lego.LegoRecordSection.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lego.LegoRecordSection.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .lego.LegoRecordField fields = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lego.LegoRecordSection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lego.LegoRecordSection)
  return false;
#undef DO_
}

void LegoRecordSection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lego.LegoRecordSection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lego.LegoRecordSection.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lego.LegoRecordSection.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .lego.LegoRecordField fields = 3;
  for (unsigned int i = 0, n = this->fields_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->fields(i), output);
  }

  // @@protoc_insertion_point(serialize_end:lego.LegoRecordSection)
}

::google::protobuf::uint8* LegoRecordSection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lego.LegoRecordSection)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lego.LegoRecordSection.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lego.LegoRecordSection.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated .lego.LegoRecordField fields = 3;
  for (unsigned int i = 0, n = this->fields_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->fields(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:lego.LegoRecordSection)
  return target;
}

size_t LegoRecordSection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lego.LegoRecordSection)
  size_t total_size = 0;

  // repeated .lego.LegoRecordField fields = 3;
  {
    unsigned int count = this->fields_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fields(i));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LegoRecordSection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lego.LegoRecordSection)
  GOOGLE_DCHECK_NE(&from, this);
  const LegoRecordSection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LegoRecordSection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lego.LegoRecordSection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lego.LegoRecordSection)
    MergeFrom(*source);
  }
}

void LegoRecordSection::MergeFrom(const LegoRecordSection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lego.LegoRecordSection)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void LegoRecordSection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lego.LegoRecordSection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LegoRecordSection::CopyFrom(const LegoRecordSection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lego.LegoRecordSection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LegoRecordSection::IsInitialized() const {
  return true;
}

void LegoRecordSection::Swap(LegoRecordSection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LegoRecordSection::InternalSwap(LegoRecordSection* other) {
  fields_.InternalSwap(&other->fields_);
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LegoRecordSection::GetMetadata() const {
  protobuf_lego_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lego_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LegoRecordSection

// string id = 1;
void LegoRecordSection::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LegoRecordSection::id() const {
  // @@protoc_insertion_point(field_get:lego.LegoRecordSection.id)
  return id_.GetNoArena();
}
void LegoRecordSection::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lego.LegoRecordSection.id)
}
#if LANG_CXX11
void LegoRecordSection::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:lego.LegoRecordSection.id)
}
#endif
void LegoRecordSection::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lego.LegoRecordSection.id)
}
void LegoRecordSection::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lego.LegoRecordSection.id)
}
::std::string* LegoRecordSection::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:lego.LegoRecordSection.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LegoRecordSection::release_id() {
  // @@protoc_insertion_point(field_release:lego.LegoRecordSection.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LegoRecordSection::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:lego.LegoRecordSection.id)
}

// string name = 2;
void LegoRecordSection::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LegoRecordSection::name() const {
  // @@protoc_insertion_point(field_get:lego.LegoRecordSection.name)
  return name_.GetNoArena();
}
void LegoRecordSection::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lego.LegoRecordSection.name)
}
#if LANG_CXX11
void LegoRecordSection::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:lego.LegoRecordSection.name)
}
#endif
void LegoRecordSection::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lego.LegoRecordSection.name)
}
void LegoRecordSection::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lego.LegoRecordSection.name)
}
::std::string* LegoRecordSection::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:lego.LegoRecordSection.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LegoRecordSection::release_name() {
  // @@protoc_insertion_point(field_release:lego.LegoRecordSection.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LegoRecordSection::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:lego.LegoRecordSection.name)
}

// repeated .lego.LegoRecordField fields = 3;
int LegoRecordSection::fields_size() const {
  return fields_.size();
}
void LegoRecordSection::clear_fields() {
  fields_.Clear();
}
const ::lego::LegoRecordField& LegoRecordSection::fields(int index) const {
  // @@protoc_insertion_point(field_get:lego.LegoRecordSection.fields)
  return fields_.Get(index);
}
::lego::LegoRecordField* LegoRecordSection::mutable_fields(int index) {
  // @@protoc_insertion_point(field_mutable:lego.LegoRecordSection.fields)
  return fields_.Mutable(index);
}
::lego::LegoRecordField* LegoRecordSection::add_fields() {
  // @@protoc_insertion_point(field_add:lego.LegoRecordSection.fields)
  return fields_.Add();
}
::google::protobuf::RepeatedPtrField< ::lego::LegoRecordField >*
LegoRecordSection::mutable_fields() {
  // @@protoc_insertion_point(field_mutable_list:lego.LegoRecordSection.fields)
  return &fields_;
}
const ::google::protobuf::RepeatedPtrField< ::lego::LegoRecordField >&
LegoRecordSection::fields() const {
  // @@protoc_insertion_point(field_list:lego.LegoRecordSection.fields)
  return fields_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LegoRecord::kIdFieldNumber;
const int LegoRecord::kNameFieldNumber;
const int LegoRecord::kSectionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LegoRecord::LegoRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_lego_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lego.LegoRecord)
}
LegoRecord::LegoRecord(const LegoRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sections_(from.sections_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:lego.LegoRecord)
}

void LegoRecord::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LegoRecord::~LegoRecord() {
  // @@protoc_insertion_point(destructor:lego.LegoRecord)
  SharedDtor();
}

void LegoRecord::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LegoRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LegoRecord::descriptor() {
  protobuf_lego_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lego_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LegoRecord& LegoRecord::default_instance() {
  protobuf_lego_2eproto::InitDefaults();
  return *internal_default_instance();
}

LegoRecord* LegoRecord::New(::google::protobuf::Arena* arena) const {
  LegoRecord* n = new LegoRecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LegoRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:lego.LegoRecord)
  sections_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LegoRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lego.LegoRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lego.LegoRecord.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "lego.LegoRecord.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .lego.LegoRecordSection sections = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sections()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lego.LegoRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lego.LegoRecord)
  return false;
#undef DO_
}

void LegoRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lego.LegoRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lego.LegoRecord.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lego.LegoRecord.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .lego.LegoRecordSection sections = 3;
  for (unsigned int i = 0, n = this->sections_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->sections(i), output);
  }

  // @@protoc_insertion_point(serialize_end:lego.LegoRecord)
}

::google::protobuf::uint8* LegoRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lego.LegoRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lego.LegoRecord.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "lego.LegoRecord.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated .lego.LegoRecordSection sections = 3;
  for (unsigned int i = 0, n = this->sections_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->sections(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:lego.LegoRecord)
  return target;
}

size_t LegoRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lego.LegoRecord)
  size_t total_size = 0;

  // repeated .lego.LegoRecordSection sections = 3;
  {
    unsigned int count = this->sections_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sections(i));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LegoRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lego.LegoRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const LegoRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LegoRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lego.LegoRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lego.LegoRecord)
    MergeFrom(*source);
  }
}

void LegoRecord::MergeFrom(const LegoRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lego.LegoRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sections_.MergeFrom(from.sections_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void LegoRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lego.LegoRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LegoRecord::CopyFrom(const LegoRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lego.LegoRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LegoRecord::IsInitialized() const {
  return true;
}

void LegoRecord::Swap(LegoRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LegoRecord::InternalSwap(LegoRecord* other) {
  sections_.InternalSwap(&other->sections_);
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LegoRecord::GetMetadata() const {
  protobuf_lego_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lego_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LegoRecord

// string id = 1;
void LegoRecord::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LegoRecord::id() const {
  // @@protoc_insertion_point(field_get:lego.LegoRecord.id)
  return id_.GetNoArena();
}
void LegoRecord::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lego.LegoRecord.id)
}
#if LANG_CXX11
void LegoRecord::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:lego.LegoRecord.id)
}
#endif
void LegoRecord::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lego.LegoRecord.id)
}
void LegoRecord::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lego.LegoRecord.id)
}
::std::string* LegoRecord::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:lego.LegoRecord.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LegoRecord::release_id() {
  // @@protoc_insertion_point(field_release:lego.LegoRecord.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LegoRecord::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:lego.LegoRecord.id)
}

// string name = 2;
void LegoRecord::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LegoRecord::name() const {
  // @@protoc_insertion_point(field_get:lego.LegoRecord.name)
  return name_.GetNoArena();
}
void LegoRecord::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lego.LegoRecord.name)
}
#if LANG_CXX11
void LegoRecord::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:lego.LegoRecord.name)
}
#endif
void LegoRecord::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lego.LegoRecord.name)
}
void LegoRecord::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lego.LegoRecord.name)
}
::std::string* LegoRecord::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:lego.LegoRecord.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LegoRecord::release_name() {
  // @@protoc_insertion_point(field_release:lego.LegoRecord.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LegoRecord::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:lego.LegoRecord.name)
}

// repeated .lego.LegoRecordSection sections = 3;
int LegoRecord::sections_size() const {
  return sections_.size();
}
void LegoRecord::clear_sections() {
  sections_.Clear();
}
const ::lego::LegoRecordSection& LegoRecord::sections(int index) const {
  // @@protoc_insertion_point(field_get:lego.LegoRecord.sections)
  return sections_.Get(index);
}
::lego::LegoRecordSection* LegoRecord::mutable_sections(int index) {
  // @@protoc_insertion_point(field_mutable:lego.LegoRecord.sections)
  return sections_.Mutable(index);
}
::lego::LegoRecordSection* LegoRecord::add_sections() {
  // @@protoc_insertion_point(field_add:lego.LegoRecord.sections)
  return sections_.Add();
}
::google::protobuf::RepeatedPtrField< ::lego::LegoRecordSection >*
LegoRecord::mutable_sections() {
  // @@protoc_insertion_point(field_mutable_list:lego.LegoRecord.sections)
  return &sections_;
}
const ::google::protobuf::RepeatedPtrField< ::lego::LegoRecordSection >&
LegoRecord::sections() const {
  // @@protoc_insertion_point(field_list:lego.LegoRecord.sections)
  return sections_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LegoResponse::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LegoResponse::LegoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_lego_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:lego.LegoResponse)
}
LegoResponse::LegoResponse(const LegoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:lego.LegoResponse)
}

void LegoResponse::SharedCtor() {
  success_ = 0;
  _cached_size_ = 0;
}

LegoResponse::~LegoResponse() {
  // @@protoc_insertion_point(destructor:lego.LegoResponse)
  SharedDtor();
}

void LegoResponse::SharedDtor() {
}

void LegoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LegoResponse::descriptor() {
  protobuf_lego_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lego_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LegoResponse& LegoResponse::default_instance() {
  protobuf_lego_2eproto::InitDefaults();
  return *internal_default_instance();
}

LegoResponse* LegoResponse::New(::google::protobuf::Arena* arena) const {
  LegoResponse* n = new LegoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LegoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:lego.LegoResponse)
  success_ = 0;
}

bool LegoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:lego.LegoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:lego.LegoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:lego.LegoResponse)
  return false;
#undef DO_
}

void LegoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:lego.LegoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->success(), output);
  }

  // @@protoc_insertion_point(serialize_end:lego.LegoResponse)
}

::google::protobuf::uint8* LegoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:lego.LegoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->success(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:lego.LegoResponse)
  return target;
}

size_t LegoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:lego.LegoResponse)
  size_t total_size = 0;

  // int32 success = 1;
  if (this->success() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->success());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LegoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:lego.LegoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LegoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LegoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:lego.LegoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:lego.LegoResponse)
    MergeFrom(*source);
  }
}

void LegoResponse::MergeFrom(const LegoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:lego.LegoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    set_success(from.success());
  }
}

void LegoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:lego.LegoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LegoResponse::CopyFrom(const LegoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lego.LegoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LegoResponse::IsInitialized() const {
  return true;
}

void LegoResponse::Swap(LegoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LegoResponse::InternalSwap(LegoResponse* other) {
  std::swap(success_, other->success_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LegoResponse::GetMetadata() const {
  protobuf_lego_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_lego_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LegoResponse

// int32 success = 1;
void LegoResponse::clear_success() {
  success_ = 0;
}
::google::protobuf::int32 LegoResponse::success() const {
  // @@protoc_insertion_point(field_get:lego.LegoResponse.success)
  return success_;
}
void LegoResponse::set_success(::google::protobuf::int32 value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:lego.LegoResponse.success)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace lego

// @@protoc_insertion_point(global_scope)
