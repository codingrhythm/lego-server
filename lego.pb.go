// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lego.proto

/*
Package lego is a generated protocol buffer package.

It is generated from these files:
	lego.proto

It has these top-level messages:
	GetRequest
	LegoRecordField
	LegoRecordSection
	LegoRecord
	LegoResponse
	Question
	Page
	Template
*/
package lego

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetRequest struct {
	Flag string `protobuf:"bytes,1,opt,name=flag" json:"flag,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetRequest) GetFlag() string {
	if m != nil {
		return m.Flag
	}
	return ""
}

type LegoRecordField struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *LegoRecordField) Reset()                    { *m = LegoRecordField{} }
func (m *LegoRecordField) String() string            { return proto.CompactTextString(m) }
func (*LegoRecordField) ProtoMessage()               {}
func (*LegoRecordField) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LegoRecordField) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *LegoRecordField) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LegoRecordField) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type LegoRecordSection struct {
	Id     string             `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name   string             `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Fields []*LegoRecordField `protobuf:"bytes,3,rep,name=fields" json:"fields,omitempty"`
}

func (m *LegoRecordSection) Reset()                    { *m = LegoRecordSection{} }
func (m *LegoRecordSection) String() string            { return proto.CompactTextString(m) }
func (*LegoRecordSection) ProtoMessage()               {}
func (*LegoRecordSection) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *LegoRecordSection) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *LegoRecordSection) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LegoRecordSection) GetFields() []*LegoRecordField {
	if m != nil {
		return m.Fields
	}
	return nil
}

type LegoRecord struct {
	Id       string               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name     string               `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Sections []*LegoRecordSection `protobuf:"bytes,3,rep,name=sections" json:"sections,omitempty"`
}

func (m *LegoRecord) Reset()                    { *m = LegoRecord{} }
func (m *LegoRecord) String() string            { return proto.CompactTextString(m) }
func (*LegoRecord) ProtoMessage()               {}
func (*LegoRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *LegoRecord) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *LegoRecord) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LegoRecord) GetSections() []*LegoRecordSection {
	if m != nil {
		return m.Sections
	}
	return nil
}

type LegoResponse struct {
	Success int32 `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *LegoResponse) Reset()                    { *m = LegoResponse{} }
func (m *LegoResponse) String() string            { return proto.CompactTextString(m) }
func (*LegoResponse) ProtoMessage()               {}
func (*LegoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *LegoResponse) GetSuccess() int32 {
	if m != nil {
		return m.Success
	}
	return 0
}

type Question struct {
	Id           string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title        string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	ResponseType int32  `protobuf:"varint,3,opt,name=response_type,json=responseType" json:"response_type,omitempty"`
	Description  string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Order        int32  `protobuf:"varint,5,opt,name=order" json:"order,omitempty"`
}

func (m *Question) Reset()                    { *m = Question{} }
func (m *Question) String() string            { return proto.CompactTextString(m) }
func (*Question) ProtoMessage()               {}
func (*Question) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Question) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Question) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Question) GetResponseType() int32 {
	if m != nil {
		return m.ResponseType
	}
	return 0
}

func (m *Question) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Question) GetOrder() int32 {
	if m != nil {
		return m.Order
	}
	return 0
}

type Page struct {
	Id        string      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title     string      `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Order     int32       `protobuf:"varint,3,opt,name=order" json:"order,omitempty"`
	Questions []*Question `protobuf:"bytes,4,rep,name=questions" json:"questions,omitempty"`
}

func (m *Page) Reset()                    { *m = Page{} }
func (m *Page) String() string            { return proto.CompactTextString(m) }
func (*Page) ProtoMessage()               {}
func (*Page) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Page) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Page) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Page) GetOrder() int32 {
	if m != nil {
		return m.Order
	}
	return 0
}

func (m *Page) GetQuestions() []*Question {
	if m != nil {
		return m.Questions
	}
	return nil
}

type Template struct {
	Id    string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name  string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Pages []*Page `protobuf:"bytes,3,rep,name=pages" json:"pages,omitempty"`
}

func (m *Template) Reset()                    { *m = Template{} }
func (m *Template) String() string            { return proto.CompactTextString(m) }
func (*Template) ProtoMessage()               {}
func (*Template) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Template) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Template) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Template) GetPages() []*Page {
	if m != nil {
		return m.Pages
	}
	return nil
}

func init() {
	proto.RegisterType((*GetRequest)(nil), "lego.GetRequest")
	proto.RegisterType((*LegoRecordField)(nil), "lego.LegoRecordField")
	proto.RegisterType((*LegoRecordSection)(nil), "lego.LegoRecordSection")
	proto.RegisterType((*LegoRecord)(nil), "lego.LegoRecord")
	proto.RegisterType((*LegoResponse)(nil), "lego.LegoResponse")
	proto.RegisterType((*Question)(nil), "lego.Question")
	proto.RegisterType((*Page)(nil), "lego.Page")
	proto.RegisterType((*Template)(nil), "lego.Template")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Lego service

type LegoClient interface {
	SendRecord(ctx context.Context, in *LegoRecord, opts ...grpc.CallOption) (*LegoResponse, error)
	GetData(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Template, error)
}

type legoClient struct {
	cc *grpc.ClientConn
}

func NewLegoClient(cc *grpc.ClientConn) LegoClient {
	return &legoClient{cc}
}

func (c *legoClient) SendRecord(ctx context.Context, in *LegoRecord, opts ...grpc.CallOption) (*LegoResponse, error) {
	out := new(LegoResponse)
	err := grpc.Invoke(ctx, "/lego.Lego/SendRecord", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *legoClient) GetData(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Template, error) {
	out := new(Template)
	err := grpc.Invoke(ctx, "/lego.Lego/GetData", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Lego service

type LegoServer interface {
	SendRecord(context.Context, *LegoRecord) (*LegoResponse, error)
	GetData(context.Context, *GetRequest) (*Template, error)
}

func RegisterLegoServer(s *grpc.Server, srv LegoServer) {
	s.RegisterService(&_Lego_serviceDesc, srv)
}

func _Lego_SendRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LegoRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LegoServer).SendRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lego.Lego/SendRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LegoServer).SendRecord(ctx, req.(*LegoRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _Lego_GetData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LegoServer).GetData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lego.Lego/GetData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LegoServer).GetData(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Lego_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lego.Lego",
	HandlerType: (*LegoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendRecord",
			Handler:    _Lego_SendRecord_Handler,
		},
		{
			MethodName: "GetData",
			Handler:    _Lego_GetData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lego.proto",
}

func init() { proto.RegisterFile("lego.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 385 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4d, 0x8f, 0xda, 0x30,
	0x10, 0x5d, 0x48, 0xb2, 0xcb, 0xce, 0x6e, 0xb7, 0xad, 0xd5, 0xaa, 0x16, 0xa7, 0xc8, 0xbd, 0x70,
	0x28, 0x1c, 0xa0, 0x3f, 0xa1, 0x2a, 0xaa, 0xd4, 0x03, 0x35, 0xdc, 0x2b, 0x37, 0x1e, 0xa2, 0xa8,
	0x21, 0x36, 0xb1, 0x39, 0xf0, 0x23, 0xfa, 0x9f, 0x2b, 0xdb, 0x31, 0x41, 0x68, 0x0f, 0xb9, 0x8d,
	0xe7, 0xe3, 0xcd, 0x7b, 0x6f, 0x64, 0x80, 0x1a, 0x4b, 0xb5, 0xd0, 0xad, 0xb2, 0x8a, 0xa4, 0x2e,
	0x66, 0x39, 0xc0, 0x1a, 0x2d, 0xc7, 0xe3, 0x09, 0x8d, 0x25, 0x04, 0xd2, 0x7d, 0x2d, 0x4a, 0x3a,
	0xca, 0x47, 0xb3, 0x47, 0xee, 0x63, 0xf6, 0x03, 0xde, 0xfe, 0xc4, 0x52, 0x71, 0x2c, 0x54, 0x2b,
	0xbf, 0x57, 0x58, 0x4b, 0xf2, 0x02, 0xe3, 0x4a, 0x76, 0x4d, 0xe3, 0x4a, 0xba, 0xb1, 0x46, 0x1c,
	0x90, 0x8e, 0xc3, 0x98, 0x8b, 0x5d, 0x4e, 0x0a, 0x2b, 0x68, 0x12, 0x72, 0x2e, 0x66, 0x7b, 0x78,
	0xdf, 0x43, 0x6d, 0xb1, 0xb0, 0x95, 0x6a, 0x06, 0x81, 0xcd, 0xe1, 0x7e, 0xef, 0x36, 0x1b, 0x9a,
	0xe4, 0xc9, 0xec, 0x69, 0xf9, 0x71, 0xe1, 0x85, 0xdc, 0xf0, 0xe2, 0x5d, 0x13, 0x43, 0x80, 0xbe,
	0x34, 0x68, 0xc1, 0x0a, 0x26, 0x26, 0xf0, 0x89, 0x2b, 0x3e, 0xdd, 0xae, 0xe8, 0xf8, 0xf2, 0x4b,
	0x23, 0x9b, 0xc1, 0x73, 0x28, 0x1b, 0xad, 0x1a, 0x83, 0x84, 0xc2, 0x83, 0x39, 0x15, 0x05, 0x1a,
	0xe3, 0xb7, 0x65, 0x3c, 0x3e, 0xd9, 0xbf, 0x11, 0x4c, 0x7e, 0x39, 0x87, 0x5f, 0x13, 0xfc, 0x01,
	0x32, 0x5b, 0xd9, 0x3a, 0x12, 0x0a, 0x0f, 0xf2, 0x19, 0xde, 0xb4, 0x1d, 0xf0, 0x6f, 0x7b, 0xd6,
	0xe8, 0x8d, 0xcc, 0xf8, 0x73, 0x4c, 0xee, 0xce, 0x1a, 0x49, 0x0e, 0x4f, 0x12, 0x4d, 0xd1, 0x56,
	0xda, 0x21, 0xd3, 0xd4, 0x03, 0x5c, 0xa7, 0x1c, 0xb8, 0x6a, 0x25, 0xb6, 0x34, 0xf3, 0xe3, 0xe1,
	0xc1, 0x34, 0xa4, 0x1b, 0x51, 0xe2, 0x40, 0x2a, 0x17, 0x8c, 0xe4, 0x0a, 0x83, 0x7c, 0x81, 0xc7,
	0x63, 0x27, 0xc9, 0xd0, 0xd4, 0x7b, 0xf6, 0x12, 0x3c, 0x8b, 0x4a, 0x79, 0xdf, 0xc0, 0x36, 0x30,
	0xd9, 0xe1, 0x41, 0xd7, 0xc2, 0xe2, 0xa0, 0x83, 0xe4, 0x90, 0x69, 0x51, 0x62, 0xbc, 0x06, 0x04,
	0x64, 0x47, 0x9a, 0x87, 0xc2, 0xf2, 0x2f, 0xa4, 0xce, 0x7d, 0xf2, 0x15, 0x60, 0x8b, 0x8d, 0xec,
	0x8e, 0xfd, 0xee, 0xf6, 0x6c, 0x53, 0x72, 0x9d, 0x09, 0xde, 0xb1, 0x3b, 0x32, 0x87, 0x87, 0x35,
	0xda, 0x6f, 0xc2, 0x8a, 0x38, 0xd2, 0x7f, 0x83, 0x69, 0xa7, 0x23, 0x12, 0x66, 0x77, 0x7f, 0xee,
	0xfd, 0x9f, 0x59, 0xfd, 0x0f, 0x00, 0x00, 0xff, 0xff, 0xbf, 0xc7, 0x72, 0x38, 0x41, 0x03, 0x00,
	0x00,
}
